ext.VERSION_MAJOR = 0
ext.VERSION_MINOR = 13
ext.VERSION_PATCH = 0

ext.JDROID_GITHUB_REPOSITORY_OWNER = 'maxirosson'
ext.JDROID_GITHUB_REPOSITORY_NAME = 'jdroid'

apply from: rootProject.file('libraryVersions.gradle')

apply plugin: 'com.jdroid.root'
apply plugin: 'com.jdroid.component.builder'

buildscript {

	repositories {
		jcenter()
		String localMavenRepo = project.hasProperty('LOCAL_MAVEN_REPO') ? project.ext.get('LOCAL_MAVEN_REPO') : System.getenv('LOCAL_MAVEN_REPO')
		if (localMavenRepo != null) {
			maven {
				url localMavenRepo
			}
		}
		maven {
			url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}

	dependencies {
		classpath 'com.jdroidframework:jdroid-component-builder:0.2.0-SNAPSHOT'
		classpath 'com.jdroidframework:jdroid-gradle-root-plugin:0.14.0-SNAPSHOT'
	}
}

allprojects {

	ext.RESOURCE_PREFIX = "jdroid"
	ext.RESOURCE_FILES_TO_SKIP_PREFIX_VALIDATION = ["analytics.xml", "com_crashlytics_export_strings.xml"]

	buildscript {
		repositories {
			jcenter()
			String localMavenRepo = project.hasProperty('LOCAL_MAVEN_REPO') ? project.ext.get('LOCAL_MAVEN_REPO') : System.getenv('LOCAL_MAVEN_REPO')
			if (localMavenRepo != null) {
				maven {
					url localMavenRepo
				}
			}
			maven {
				url "https://oss.sonatype.org/content/repositories/snapshots/"
			}
		}
	}

    repositories {
		jcenter()
		String localMavenRepo = project.hasProperty('LOCAL_MAVEN_REPO') ? project.ext.get('LOCAL_MAVEN_REPO') : System.getenv('LOCAL_MAVEN_REPO')
		if (localMavenRepo != null) {
			maven {
				url localMavenRepo
			}
		}
		maven {
			url "https://oss.sonatype.org/content/repositories/snapshots/"
		}
    }
}
